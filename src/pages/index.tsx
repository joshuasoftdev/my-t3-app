import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import { SignIn, SignInButton, SignOutButton } from "@clerk/nextjs";

function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id="outer-container" className="relative">
        <main
          className="flex min-h-screen flex-auto flex-col items-center justify-center from-[#2e026d]  to-[#15162c] bg-cover bg-no-repeat"
          id="page-wrap"
          style={{
            backgroundImage:
              "url('https://livewallp.com/wp-content/uploads/2021/07/60FPS-Love-Money-RocknRoll-Sakura-with-music.jpg')",
          }}
        >
          <div>
            <h2 className="center items-center text-2xl font-bold text-white">
              sign in with clerk
            </h2>
            <div className="flex flex-col items-center justify-center gap-4 rounded bg-white">
              <SignInButton />
            </div>
            <h2 className="center items-center text-center text-2xl font-bold text-white">
              sign out with clerk
            </h2>
            <div className="flex flex-col items-center justify-center gap-4 rounded bg-white">
              <SignOutButton />
            </div>
          </div>
          <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 sm:mt-2">
            <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
              My <span className="text-[hsl(280,100%,70%)]">DEV</span> Portfolio
            </h1>
          </div>
        </main>
      </div>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-cyan-500 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}

export default Home;
